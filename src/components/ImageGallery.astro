---
import { Image } from 'astro:assets';

export interface Props {
  images: Array<{
    src: string;
    alt: string;
    caption?: string;
    width?: number;
    height?: number;
  }>;
  columns?: 1 | 2 | 3 | 4;
  aspectRatio?: 'square' | 'landscape' | 'portrait' | 'auto';
}

const { 
  images, 
  columns = 3, 
  aspectRatio = 'landscape' 
} = Astro.props;

const gridCols = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4'
};

const aspectClasses = {
  square: 'aspect-square',
  landscape: 'aspect-video',
  portrait: 'aspect-[3/4]',
  auto: ''
};
---

<div class="space-y-6">
  <!-- First row: 3 images -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    {images.slice(0, 3).map((image, index) => (
      <div class={`group relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 ${aspectClasses[aspectRatio]}`}>
        
        <!-- Optimized image display -->
        <Image
          src={image.src}
          alt={image.alt}
          width={image.width || 400}
          height={image.height || 300}
          loading="lazy"
          decoding="async"
          class="w-full h-full object-cover"
          sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, (max-width: 1280px) 33vw, 25vw"
          format="webp"
          quality={85}
        />
        
        <!-- Professional caption overlay -->
        {image.caption && (
          <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
            <p class="text-white text-sm font-medium">{image.caption}</p>
          </div>
        )}
      </div>
    ))}
  </div>
  
  <!-- Second row: 2 centered images -->
  <div class="flex flex-col md:flex-row justify-center gap-6">
    {images.slice(3).map((image, index) => (
      <div class={`group relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 ${aspectClasses[aspectRatio]} w-full md:w-1/3`}>
        
        <!-- Optimized image display -->
        <Image
          src={image.src}
          alt={image.alt}
          width={image.width || 400}
          height={image.height || 300}
          loading="lazy"
          decoding="async"
          class="w-full h-full object-cover"
          sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, (max-width: 1280px) 33vw, 25vw"
          format="webp"
          quality={85}
        />
        
        <!-- Professional caption overlay -->
        {image.caption && (
          <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
            <p class="text-white text-sm font-medium">{image.caption}</p>
          </div>
        )}
      </div>
    ))}
  </div>
</div>

<style>
  /* Professional gallery styling */
  img {
    background-color: #f8f9fa;
  }
  
  /* Clean hover effect */
  .group:hover {
    transform: translateY(-2px);
  }
  
  /* Smooth transitions */
  .group {
    transition: all 0.2s ease-in-out;
  }
</style>

<script>
  // Simple, professional gallery functionality
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('img');
    
    // Ensure images load properly
    images.forEach(img => {
      img.addEventListener('load', () => {
        img.style.opacity = '1';
      });
    });
  });
</script>
